import initSqlJs from"sql.js";let db=null;async function createDatabase(){let e=await initSqlJs({locateFile:e=>"/sql-wasm.wasm"});db=new e.Database}function onModuleReady(){const e=this.data;switch(e&&e.action){case"exec":if(!e["sql"]){throw new Error("exec: Missing query string")}return postMessage({id:e.id,results:db.exec(e.sql,e.params)[0]??{values:[]}});case"begin_transaction":return postMessage({id:e.id,results:db.exec("BEGIN TRANSACTION;")});case"end_transaction":return postMessage({id:e.id,results:db.exec("END TRANSACTION;")});case"rollback_transaction":return postMessage({id:e.id,results:db.exec("ROLLBACK TRANSACTION;")});default:throw new Error(`Unsupported action: ${e&&e.action}`)}}function onError(e){return postMessage({id:this.data.id,error:e})}if(typeof importScripts==="function"){db=null;const e=createDatabase();self.onmessage=s=>e.then(onModuleReady.bind(s)).catch(onError.bind(s))}