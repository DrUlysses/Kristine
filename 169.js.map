{"version":3,"file":"169.js","mappings":"CAAA,SAAUA,EAAiCC,EAAMC,GAChD,UAAUC,UAAY,iBAAmBC,SAAW,SACnDA,OAAOD,QAAUD,SACb,UAAUG,SAAW,YAAcA,OAAOC,IAC9CD,OAAO,GAAIH,QACP,UAAUC,UAAY,SAC1BA,QAAQ,cAAgBD,SAExBD,EAAK,cAAgBC,GACtB,EATD,CASGK,YAAY,I,kECPf,IAAIC,EAAK,KACT,MAAMC,EAAiB,cAEvBC,eAAeC,IACX,IAAIC,QAAY,IAAU,CAACC,WAAYC,GAAQ,mBAG/C,IACI,MAAMC,QAAoBC,EAAkBP,GAC5C,GAAIM,EAAa,CAEbP,EAAK,IAAII,EAAIK,SAASF,GACtBG,QAAQC,IAAI,6BAChB,KAAO,CAEHX,EAAK,IAAII,EAAIK,SACbC,QAAQC,IAAI,uBAChB,CACJ,CAAE,MAAOC,GACLF,QAAQE,MAAM,qCAAsCA,GACpDZ,EAAK,IAAII,EAAIK,QACjB,CACJ,CAGAP,eAAeW,EAAgBC,EAAKC,GAChC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAUC,UAAUC,KAAK,aAAc,GAE7CF,EAAQG,gBAAkB,SAAUC,GAChC,MAAMvB,EAAKuB,EAAMC,OAAOC,OACxB,IAAKzB,EAAG0B,iBAAiBC,SAAS,aAAc,CAC5C3B,EAAG4B,kBAAkB,YACzB,CACJ,EAEAT,EAAQU,UAAY,SAAUN,GAC1B,MAAMvB,EAAKuB,EAAMC,OAAOC,OACxB,MAAMK,EAAc9B,EAAG8B,YAAY,CAAC,aAAc,aAClD,MAAMC,EAAQD,EAAYE,YAAY,aAEtC,MAAMC,EAAeF,EAAMG,IAAInB,EAAMD,GACrCmB,EAAaJ,UAAY,IAAMZ,IAC/BgB,EAAaE,QAAU,IAAMjB,EAAOe,EAAarB,OAEjDkB,EAAYM,WAAa,IAAMpC,EAAGqC,OACtC,EAEAlB,EAAQgB,QAAU,WACdjB,EAAOC,EAAQP,MACnB,CAAC,GAET,CAGAV,eAAeM,EAAkBM,GAC7B,OAAO,IAAIE,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAUC,UAAUC,KAAK,aAAc,GAE7CF,EAAQG,gBAAkB,SAAUC,GAChC,MAAMvB,EAAKuB,EAAMC,OAAOC,OACxB,IAAKzB,EAAG0B,iBAAiBC,SAAS,aAAc,CAC5C3B,EAAG4B,kBAAkB,YACzB,CACJ,EAEAT,EAAQU,UAAY,SAAUN,GAC1B,MAAMvB,EAAKuB,EAAMC,OAAOC,OACxB,MAAMK,EAAc9B,EAAG8B,YAAY,CAAC,aAAc,YAClD,MAAMC,EAAQD,EAAYE,YAAY,aAEtC,MAAMM,EAAaP,EAAMQ,IAAIzB,GAC7BwB,EAAWT,UAAY,IAAMZ,EAAQqB,EAAWb,QAChDa,EAAWH,QAAU,IAAMjB,EAAOoB,EAAW1B,OAE7CkB,EAAYM,WAAa,IAAMpC,EAAGqC,OACtC,EAEAlB,EAAQgB,QAAU,WACdjB,EAAOC,EAAQP,MACnB,CAAC,GAET,CAEA,SAAS4B,IACL,MAAMzB,EAAO0B,KAAK1B,KAElB,OAAQA,GAAQA,EAAK2B,QACjB,IAAK,OACD,IAAK3B,EAAK,OAAQ,CACd,MAAM,IAAI4B,MAAM,6BACpB,CAEA,MAAMC,EAAU5C,EAAG6C,KAAK9B,EAAK+B,IAAK/B,EAAKgC,QAAQ,IAAM,CAACC,OAAQ,IAI9D,MAAMC,EAASjD,EAAGkD,SAClBrC,EAAgBZ,EAAgBgD,GAC3BE,OAAMC,GAAO1C,QAAQE,MAAM,yBAA0BwC,KAE1D,OAAOC,YAAY,CACfC,GAAIvC,EAAKuC,GACTV,QAASA,IAEjB,IAAK,oBACD,OAAOS,YAAY,CACfC,GAAIvC,EAAKuC,GACTV,QAAS5C,EAAG6C,KAAK,wBAEzB,IAAK,kBACD,MAAMU,EAAqBvD,EAAG6C,KAAK,oBAGnC,MAAMW,EAAoBxD,EAAGkD,SAC7BrC,EAAgBZ,EAAgBuD,GAC3BL,OAAMC,GAAO1C,QAAQE,MAAM,2CAA4CwC,KAE5E,OAAOC,YAAY,CACfC,GAAIvC,EAAKuC,GACTV,QAASW,IAEjB,IAAK,uBACD,OAAOF,YAAY,CACfC,GAAIvC,EAAKuC,GACTV,QAAS5C,EAAG6C,KAAK,2BAGzB,IAAK,gBACD,IACI,MAAMY,EAAWzD,EAAGkD,SACpBrC,EAAgBZ,EAAgBwD,GAChC,OAAOJ,YAAY,CACfC,GAAIvC,EAAKuC,GACTV,QAAS,CAACc,QAAS,OAE3B,CAAE,MAAO9C,GACL,OAAOyC,YAAY,CACfC,GAAIvC,EAAKuC,GACT1C,MAAOA,EAAM+C,SAErB,CACJ,QACI,MAAM,IAAIhB,MAAM,uBAAuB5B,GAAQA,EAAK2B,UAEhE,CAEA,SAASkB,EAAQR,GACb,OAAOC,YAAY,CACfC,GAAIb,KAAK1B,KAAKuC,GACd1C,MAAOwC,GAEf,CAEA,UAAWS,gBAAkB,WAAY,CACrC7D,EAAK,KACL,MAAM8D,EAAiB3D,IACvB4D,KAAKC,UAAazC,GACPuC,EACFG,KAAKzB,EAAc0B,KAAK3C,IACxB4B,MAAMS,EAAQM,KAAK3C,GAEhC,C,oCCnKA,IAAI4C,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,GAAIC,IAAiBC,UAAW,CAC/B,OAAOD,EAAa3E,OACrB,CAEA,IAAIC,EAASuE,EAAyBE,GAAY,CACjDf,GAAIe,EACJG,OAAQ,MACR7E,QAAS,CAAC,GAIX8E,EAAoBJ,GAAUzE,EAAQA,EAAOD,QAASyE,GAGtDxE,EAAO4E,OAAS,KAGhB,OAAO5E,EAAOD,OACf,CAGAyE,EAAoBM,EAAID,EAGxBL,EAAoBO,EAAI,KAGvB,IAAIC,EAAsBR,EAAoBS,EAAEN,UAAW,CAAC,MAAM,IAAOH,EAAoB,OAC7FQ,EAAsBR,EAAoBS,EAAED,GAC5C,OAAOA,CAAmB,E,MCpC3B,IAAIE,EAAW,GACfV,EAAoBS,EAAI,CAACpD,EAAQsD,EAAUC,EAAIC,KAC9C,GAAGF,EAAU,CACZE,EAAWA,GAAY,EACvB,IAAI,IAAIC,EAAIJ,EAASK,OAAQD,EAAI,GAAKJ,EAASI,EAAI,GAAG,GAAKD,EAAUC,IAAKJ,EAASI,GAAKJ,EAASI,EAAI,GACrGJ,EAASI,GAAK,CAACH,EAAUC,EAAIC,GAC7B,MACD,CACA,IAAIG,EAAeC,SACnB,IAAK,IAAIH,EAAI,EAAGA,EAAIJ,EAASK,OAAQD,IAAK,CACzC,IAAKH,EAAUC,EAAIC,GAAYH,EAASI,GACxC,IAAII,EAAY,KAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAASI,OAAQI,IAAK,CACzC,IAAKN,EAAW,IAAM,GAAKG,GAAgBH,IAAaO,OAAOC,KAAKrB,EAAoBS,GAAGa,OAAO5E,GAASsD,EAAoBS,EAAE/D,GAAKiE,EAASQ,MAAO,CACrJR,EAASY,OAAOJ,IAAK,EACtB,KAAO,CACND,EAAY,MACZ,GAAGL,EAAWG,EAAcA,EAAeH,CAC5C,CACD,CACA,GAAGK,EAAW,CACbR,EAASa,OAAOT,IAAK,GACrB,IAAIU,EAAIZ,IACR,GAAIY,IAAMrB,UAAW9C,EAASmE,CAC/B,CACD,CACA,OAAOnE,CAAM,C,WCzBd2C,EAAoByB,EAAKjG,IACxB,IAAIkG,EAASlG,GAAUA,EAAOmG,WAC7B,IAAOnG,EAAO,WACd,IAAM,EACPwE,EAAoB4B,EAAEF,EAAQ,CAAEG,EAAGH,IACnC,OAAOA,CAAM,C,WCLd1B,EAAoB4B,EAAI,CAACrG,EAASuG,KACjC,IAAI,IAAIpF,KAAOoF,EAAY,CAC1B,GAAG9B,EAAoB+B,EAAED,EAAYpF,KAASsD,EAAoB+B,EAAExG,EAASmB,GAAM,CAClF0E,OAAOY,eAAezG,EAASmB,EAAK,CAAEuF,WAAY,KAAM9D,IAAK2D,EAAWpF,IACzE,CACD,E,WCNDsD,EAAoBkC,EAAI,CAAC,EAGzBlC,EAAoBmC,EAAKC,GACjBxF,QAAQyF,IAAIjB,OAAOC,KAAKrB,EAAoBkC,GAAGI,QAAO,CAACC,EAAU7F,KACvEsD,EAAoBkC,EAAExF,GAAK0F,EAASG,GACpC,OAAOA,CAAQ,GACb,I,WCNJvC,EAAoBwC,EAAKJ,GAEjB,GAAKA,EAAU,K,WCHvBpC,EAAoByC,EAAI,WACvB,UAAW9G,aAAe,SAAU,OAAOA,WAC3C,IACC,OAAO0C,MAAQ,IAAIqE,SAAS,cAAb,EAChB,CAAE,MAAOP,GACR,UAAWQ,SAAW,SAAU,OAAOA,MACxC,CACA,CAPuB,E,WCAxB3C,EAAoB+B,EAAI,CAACa,EAAKC,IAAUzB,OAAO0B,UAAUC,eAAeC,KAAKJ,EAAKC,E,WCAlF7C,EAAoBiD,IAAOzH,IAC1BA,EAAO0H,MAAQ,GACf,IAAK1H,EAAO2H,SAAU3H,EAAO2H,SAAW,GACxC,OAAO3H,CAAM,C,WCHd,IAAI4H,EACJ,GAAIpD,EAAoByC,EAAEhD,cAAe2D,EAAYpD,EAAoByC,EAAEY,SAAW,GACtF,IAAIC,EAAWtD,EAAoByC,EAAEa,SACrC,IAAKF,GAAaE,EAAU,CAC3B,GAAIA,EAASC,eAAiBD,EAASC,cAAcC,QAAQC,gBAAkB,SAC9EL,EAAYE,EAASC,cAAcG,IACpC,IAAKN,EAAW,CACf,IAAIO,EAAUL,EAASM,qBAAqB,UAC5C,GAAGD,EAAQ5C,OAAQ,CAClB,IAAID,EAAI6C,EAAQ5C,OAAS,EACzB,MAAOD,GAAK,KAAOsC,IAAc,aAAaS,KAAKT,IAAaA,EAAYO,EAAQ7C,KAAK4C,GAC1F,CACD,CACD,CAGA,IAAKN,EAAW,MAAM,IAAI7E,MAAM,yDAChC6E,EAAYA,EAAUU,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpF9D,EAAoB+D,EAAIX,C,WCdxB,IAAIY,EAAkB,CACrB,IAAK,GAIN,IAAIC,EAAgBtH,IACnB,IAAKgE,EAAUuD,EAAaC,GAAWxH,EACvC,IAAI,IAAIsD,KAAYiE,EAAa,CAChC,GAAGlE,EAAoB+B,EAAEmC,EAAajE,GAAW,CAChDD,EAAoBM,EAAEL,GAAYiE,EAAYjE,EAC/C,CACD,CACA,GAAGkE,EAASA,EAAQnE,GACpB,MAAMW,EAASI,OACdiD,EAAgBrD,EAASyD,OAAS,EACnCC,EAA2B1H,EAAK,EAEjCqD,EAAoBkC,EAAEpB,EAAI,CAACsB,EAASG,KAEnC,IAAIyB,EAAgB5B,GAAU,CAC7B,GAAG,KAAM,CACR3C,cAAcO,EAAoB+D,EAAI/D,EAAoBwC,EAAEJ,GAC7D,CACD,GAGD,IAAIkC,EAAqB3I,WAAW,0BAA4BA,WAAW,2BAA6B,GACxG,IAAI0I,EAA6BC,EAAmBC,KAAKzE,KAAKwE,GAC9DA,EAAmBC,KAAON,C,WChC1B,IAAIO,EAAOxE,EAAoBO,EAC/BP,EAAoBO,EAAI,IAChBP,EAAoBmC,EAAE,KAAKtC,KAAK2E,E,KCDxC,IAAIhE,EAAsBR,EAAoBO,I","sources":["webpack://composeApp/webpack/universalModuleDefinition","webpack://composeApp/./kotlin/sqljs.worker.js","webpack://composeApp/webpack/bootstrap","webpack://composeApp/webpack/runtime/chunk loaded","webpack://composeApp/webpack/runtime/compat get default export","webpack://composeApp/webpack/runtime/define property getters","webpack://composeApp/webpack/runtime/ensure chunk","webpack://composeApp/webpack/runtime/get javascript chunk filename","webpack://composeApp/webpack/runtime/global","webpack://composeApp/webpack/runtime/hasOwnProperty shorthand","webpack://composeApp/webpack/runtime/node module decorator","webpack://composeApp/webpack/runtime/publicPath","webpack://composeApp/webpack/runtime/importScripts chunk loading","webpack://composeApp/webpack/runtime/startup chunk dependencies","webpack://composeApp/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"composeApp\"] = factory();\n\telse\n\t\troot[\"composeApp\"] = factory();\n})(globalThis, () => {\nreturn ","import initSqlJs from \"sql.js\";\n\nlet db = null;\nconst DB_STORAGE_KEY = \"kristine-db\";\n\nasync function createDatabase() {\n    let SQL = await initSqlJs({locateFile: file => '/sql-wasm.wasm'});\n\n    // Try to load the database from IndexedDB\n    try {\n        const savedDbData = await loadFromIndexedDB(DB_STORAGE_KEY);\n        if (savedDbData) {\n            // Create database from saved data\n            db = new SQL.Database(savedDbData);\n            console.log(\"Database loaded from cache\");\n        } else {\n            // Create a new database if no saved data exists\n            db = new SQL.Database();\n            console.log(\"New database created\");\n        }\n    } catch (error) {\n        console.error(\"Error loading database from cache:\", error);\n        db = new SQL.Database();\n    }\n}\n\n// Save database to IndexedDB\nasync function saveToIndexedDB(key, data) {\n    return new Promise((resolve, reject) => {\n        const request = indexedDB.open(\"KristineDB\", 1);\n\n        request.onupgradeneeded = function (event) {\n            const db = event.target.result;\n            if (!db.objectStoreNames.contains('databases')) {\n                db.createObjectStore('databases');\n            }\n        };\n\n        request.onsuccess = function (event) {\n            const db = event.target.result;\n            const transaction = db.transaction(['databases'], 'readwrite');\n            const store = transaction.objectStore('databases');\n\n            const storeRequest = store.put(data, key);\n            storeRequest.onsuccess = () => resolve();\n            storeRequest.onerror = () => reject(storeRequest.error);\n\n            transaction.oncomplete = () => db.close();\n        };\n\n        request.onerror = function () {\n            reject(request.error);\n        };\n    });\n}\n\n// Load database from IndexedDB\nasync function loadFromIndexedDB(key) {\n    return new Promise((resolve, reject) => {\n        const request = indexedDB.open(\"KristineDB\", 1);\n\n        request.onupgradeneeded = function (event) {\n            const db = event.target.result;\n            if (!db.objectStoreNames.contains('databases')) {\n                db.createObjectStore('databases');\n            }\n        };\n\n        request.onsuccess = function (event) {\n            const db = event.target.result;\n            const transaction = db.transaction(['databases'], 'readonly');\n            const store = transaction.objectStore('databases');\n\n            const getRequest = store.get(key);\n            getRequest.onsuccess = () => resolve(getRequest.result);\n            getRequest.onerror = () => reject(getRequest.error);\n\n            transaction.oncomplete = () => db.close();\n        };\n\n        request.onerror = function () {\n            reject(request.error);\n        };\n    });\n}\n\nfunction onModuleReady() {\n    const data = this.data;\n\n    switch (data && data.action) {\n        case \"exec\":\n            if (!data[\"sql\"]) {\n                throw new Error(\"exec: Missing query string\");\n            }\n\n            const results = db.exec(data.sql, data.params)[0] ?? {values: []};\n\n            // Save database after each operation\n            // You might want to optimize this to save less frequently\n            const dbData = db.export();\n            saveToIndexedDB(DB_STORAGE_KEY, dbData)\n                .catch(err => console.error(\"Error saving database:\", err));\n\n            return postMessage({\n                id: data.id,\n                results: results\n            });\n        case \"begin_transaction\":\n            return postMessage({\n                id: data.id,\n                results: db.exec(\"BEGIN TRANSACTION;\")\n            })\n        case \"end_transaction\":\n            const transactionResults = db.exec(\"END TRANSACTION;\");\n\n            // Save database after transaction is committed\n            const transactionDbData = db.export();\n            saveToIndexedDB(DB_STORAGE_KEY, transactionDbData)\n                .catch(err => console.error(\"Error saving database after transaction:\", err));\n\n            return postMessage({\n                id: data.id,\n                results: transactionResults\n            })\n        case \"rollback_transaction\":\n            return postMessage({\n                id: data.id,\n                results: db.exec(\"ROLLBACK TRANSACTION;\")\n            })\n        // Add a new action to explicitly save the database\n        case \"save_database\":\n            try {\n                const saveData = db.export();\n                saveToIndexedDB(DB_STORAGE_KEY, saveData);\n                return postMessage({\n                    id: data.id,\n                    results: {success: true}\n                });\n            } catch (error) {\n                return postMessage({\n                    id: data.id,\n                    error: error.message\n                });\n            }\n        default:\n            throw new Error(`Unsupported action: ${data && data.action}`);\n    }\n}\n\nfunction onError(err) {\n    return postMessage({\n        id: this.data.id,\n        error: err\n    });\n}\n\nif (typeof importScripts === \"function\") {\n    db = null;\n    const sqlModuleReady = createDatabase()\n    self.onmessage = (event) => {\n        return sqlModuleReady\n            .then(onModuleReady.bind(event))\n            .catch(onError.bind(event));\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [150], () => (__webpack_require__(353)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t169: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkcomposeApp\"] = globalThis[\"webpackChunkcomposeApp\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(150).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","globalThis","db","DB_STORAGE_KEY","async","createDatabase","SQL","locateFile","file","savedDbData","loadFromIndexedDB","Database","console","log","error","saveToIndexedDB","key","data","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","target","result","objectStoreNames","contains","createObjectStore","onsuccess","transaction","store","objectStore","storeRequest","put","onerror","oncomplete","close","getRequest","get","onModuleReady","this","action","Error","results","exec","sql","params","values","dbData","export","catch","err","postMessage","id","transactionResults","transactionDbData","saveData","success","message","onError","importScripts","sqlModuleReady","self","onmessage","then","bind","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","loaded","__webpack_modules__","m","x","__webpack_exports__","O","deferred","chunkIds","fn","priority","i","length","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","f","e","chunkId","all","reduce","promises","u","g","Function","window","obj","prop","prototype","hasOwnProperty","call","nmd","paths","children","scriptUrl","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","test","replace","p","installedChunks","installChunk","moreModules","runtime","pop","parentChunkLoadingFunction","chunkLoadingGlobal","push","next"],"sourceRoot":""}